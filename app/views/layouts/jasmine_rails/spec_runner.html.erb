<%
#This file is a controlled mess to provide a page you can load with your browser when 
# JHW doesn't provide sufficient console feedback.
# at some point the jasmine-gem will support Rails 3.1 / assets / Coffee. 
# see this thread on the jasmine group: http://groups.google.com/group/jasmine-js/browse_thread/thread/c9c30854ecfd915d
require 'jasmine-core'
require 'jasmine'

config = Jasmine::Config.new
# (config.css_files || [])



%>
<!DOCTYPE html>
<html>
  <head>
    <!-- jasmine -->
    <% Jasmine::Core.css_files.each do |f| %>
      <%= stylesheet_link_tag url_for+"lib/css/"+f %>
    <% end %>

    <% Jasmine::Core.js_files.map do |f| %>
      <%= javascript_include_tag url_for+"lib/js/"+f %>
    <% end %>

    <!-- css -->
    <% Jasmine::Config.new.css_files.each do |f| %>
      <%= stylesheet_link_tag url_for+"css"+f%>
    <% end %>

    <!-- sources -->    
    <% Jasmine::Config.new.js_files.each do |f| %>
      <%= javascript_include_tag url_for+"js"+f%>
    <% end %>
    
    <!-- executing runner -->
    <script type="text/javascript">
      var jsApiReporter;
      (function() {
        var jasmineEnv = jasmine.getEnv();

        jsApiReporter = new jasmine.JsApiReporter();
        var trivialReporter = new jasmine.TrivialReporter();

        jasmineEnv.addReporter(jsApiReporter);
        jasmineEnv.addReporter(trivialReporter);

        jasmineEnv.specFilter = function(spec) {
          return trivialReporter.specFilter(spec);
        };

        var currentWindowOnload = window.onload;

        window.onload = function() {
          if (currentWindowOnload) {
            currentWindowOnload();
          }
          execJasmine();
        };

        function execJasmine() {
          jasmineEnv.execute();
        }

      })();
    </script>
  </head>
  <body>
    <div id="jasmine_content"></div>
    <%= yield %>
  <body>
</html>